---I have added some notes to provide more clarity to the schemas, tables, columns and contraints based on the requirements from the business.

CREATE DATABASE UNIONBANK; --- Union Bank database will be used to store, manage and organize all Union Bank related data.
CREATE SCHEMA BORROWER; --- The Borrower and Loan schemas will be used to layout the structure and organization within the database
CREATE SCHEMA LOAN;

CREATE TABLE BORROWER.BORROWER   --- There are  2 tables created in the BORROWER Schema for the Borrower and Borrower Address
(BorrowerID INT NOT NULL,
BorrowerFirstName VARCHAR (255) NOT NULL,
BorrowerMiddleInitiaL CHAR (1) NOT NULL,
BorrowerLastName VARCHAR (255) NOT NULL,
DOB DATETIME NOT NULL,
Gender CHAR (1) NULL,
TayPayerID_SSN VARCHAR (9) NOT NULL,
PhoneNumber VARCHAR (10) NOT NULL,
Email VARCHAR (255) NOT NULL,
Citizenship VARCHAR (255) NULL,
BeneficiaryName VARCHAR (255) NULL,
IsUSCitizen BIT NULL,
CreateDate DATETIME NOT NULL);

CREATE TABLE BORROWER.BORROWERADDRESS
(AddressID INT NOT NULL,
BorrowerID INT NOT NULL,
StreetAddress VARCHAR (255) NOT NULL,
Zip VARCHAR (5) NOT NULL,
CreateDate DATETIME NOT NULL);

CREATE TABLE CALENDAR  ---A schema name was not added for this table. See dbo.CALENDAR Table.
(CalendarDate DATETIME NULL);

CREATE TABLE STATE
(StateID CHAR (2) NOT NULL,
StateName VARCHAR (255) NOT NULL,
CreateDate DATETIME NOT NULL);

CREATE TABLE US_ZIPCODES
(IsSurrogateKey INT NOT NULL,
Zip VARCHAR (5) NOT NULL,
Latitude FLOAT NULL,
Longitude FLOAT NULL,
City VARCHAR (255) NULL,
State_ID VARCHAR (2) NULL,
Population INT NULL,
Density DECIMAL (18,0) NULL,  --- Decimal (and Numeric) stores numbers in precision & scale. The former represents the total number ofdigits & the scale represents the digits after decimal.
County_Fips VARCHAR (10) NULL,
CountyName VARCHAR (255) NULL,
County_Names_All VARCHAR (255) NULL,
County_Fips_All VARCHAR (50) NULL,
TimeZone VARCHAR (255) NULL,
CreateDate DATETIME NOT NULL);

CREATE TABLE LOAN.LOANSETUPINFORMATION
(IsSurrogateKey INT NOT NULL,
LoanNumber VARCHAR (10) NOT NULL,
PurchaseAmount NUMERIC (18,2) NOT NULL,
PurchaseDate DATETIME NOT NULL,
LoanTerm INT NOT NULL,
BorrowerID INT NOT NULL,
UnderWriterID INT NOT NULL,
ProductID CHAR (2) NOT NULL,
InterestRate DECIMAL (3,2) NOT NULL,
PaymentFrequency INT NOT NULL,
AppraisalValue NUMERIC (10,2) NOT NULL,
CreateDate DATETIME NOT NULL,
LTV DECIMAL (4,2) NOT NULL,
FirstInterestPaymentDate DATETIME NULL,
MaturityDate DATETIME NOT NULL);

CREATE TABLE LOAN.LOANPERIODIC
(IsSurrogateKey INT NOT NULL,
LoanNumber VARCHAR (10) NOT NULL,
CycleDate DATETIME NOT NULL,
ExtraMonthlyPayment NUMERIC (18,2) NOT NULL,
UnpaidPrincipalBalance NUMERIC (18,2) NOT NULL,
BeginningScheduleBalance NUMERIC NOT NULL,
PaidInstallment NUMERIC (18,2) NOT NULL,
InterestPortion NUMERIC (18,2) NOT NULL,
PrincipalPortion NUMERIC (18,2) NOT NULL,
EndScheduleBalance NUMERIC (18,2) NOT NULL,
ActualScheduleBalance NUMERIC (18,2) NOT NULL,
TotalInterestedAccrued NUMERIC (18,2) NOT NULL,
TotalPrincipalAccrued NUMERIC (18,2) NOT NULL,
DefaultPentalty NUMERIC (18,2) NOT NULL,
DelinquencyCode NUMERIC (10,0) NOT NULL,
CreateDate DATETIME NOT NULL);

CREATE TABLE LOAN.LU_DELINQUENCY
(DelinquencyCode INT NOT NULL,
Delinquency VARCHAR (255) NOT NULL,
PaymentFrequency INT NOT NULL,
PaymentIsMadeEvery INT NOT NULL,
PaymentFrequency_Description VARCHAR (255) NOT NULL);

CREATE TABLE LOAN.UNDERWRITER
(UnderwriterID INT NOT NULL,
UnderwriterFirstName VARCHAR (255) NULL,
UnderwriterMiddleName CHAR (1) NULL,
PhoneNumber VARCHAR (1) NULL,
Email VARCHAR (255) NOT NULL,
CreateDate DATETIME NOT NULL,
UnderwriterLastName VARCHAR (255) NOT NULL)

----CONSTRAINTS
ALTER TABLE BORROWER.BORROWER
ADD CONSTRAINT CK_CUSTOMER_DOB CHECK (DOB>=DATEADD (YEAR,-18,GETDATE()))

ALTER TABLE BORROWER.BORROWER
ADD CONSTRAINT CK_VALID_EMAIL CHECK (Email LIKE '%@%');  ---Applied constraint to ensure the email has the valid format 

ALTER TABLE BORROWER.BORROWER
ADD CONSTRAINT CH_PHONENUMBER CHECK (LEN(PhoneNumber)=10)

ALTER TABLE BORROWER
CHANGE COLUMN TayPayerID_SSN TaxPayerID_SSN VARCHAR (9) NOT NULL; ---NEED TO REVIEW 


ALTER TABLE BORROWER.BORROWER
ADD CONSTRAINT DF_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;  ---NEED TO REVIEW 

ALTER TABLE BORROWER.BORROWER
ADD CONSTRAINT PK_BORROWER_BORROWERID PRIMARY KEY (BORROWERID);

ALTER TABLE BORROWER.BORROWERADDRESS
ADD CONSTRAINT DF_BORROWERADDRESS_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;

ALTER TABLE BORROWER.BORROWERADDRESS
ADD CONSTRAINT FK_BORROWERADDRESS_BORROWERID FOREIGN KEY (BORROWERID) REFERENCES [BORROWER].[BORROWER];

ALTER TABLE BORROWER.BORROWERADDRESS
ADD CONSTRAINT FK_BORROWERADDRESS_ZIP FOREIGN KEY (ZIP) REFERENCES dbo.US_ZIPCODES;   ---Error because a PK was not created in the dbo.US ZIPCODE table. Although this was not included in the requirement, this PK needed to be created to add a FK. See next line of code below. 

ALTER TABLE dbo.US_ZIPCODES
ADD CONSTRAINT PK_US_ZIPCODES_ZIP PRIMARY KEY (ZIP);

ALTER TABLE [BORROWER].[BORROWERADDRESS]
ADD CONSTRAINT UC_ADDRESSID_BORROWER_ID UNIQUE (AddressID,BorrowerID);

ALTER TABLE [LOAN].[LOANPERIODIC]
ADD CONSTRAINT CHK_LOANPERIODIC_InterestPortion_PrincipalPortion_PaidInstallment CHECK(PaidInstallment = InterestPortion + PrincipalPortion); 

ALTER TABLE LOAN.LOANPERIODIC
ADD CONSTRAINT DF_LOANPERIODIC_CREATEDATE DEFAULT (GETDATE()) FOR CREATEDATE;

ALTER TABLE LOAN.LOANPERIODIC
ADD CONSTRAINT DF_LOANPERIODIC_EXTRAMONTHLYPAYMENT DEFAULT 0 FOR EXTRAMONTHLYPAYMENT;

ALTER TABLE LOAN.LOANPERIODIC
DROP COLUMN ExtaMonthlyPayment;

ALTER TABLE LOAN.LOANPERIODIC
create COLUMN ExtraMonthlyPayment NUMERIC (18,2) NOT NULL;     ---- NEED TO ADD NEW COLUMN

ALTER TABLE LOAN.LOANPERIODIC
ADD CONSTRAINT PK_LOANPERIODIC_LOANNUMBER PRIMARY KEY (LoanNumber);

ALTER TABLE[LOAN].[LOANSETUPINFORMATION]
ADD CONSTRAINT PK_LOANSETUPINFORMATION_LOANNUMBER PRIMARY KEY (LoanNumber);


ALTER TABLE LOAN.LOANPERIODIC
ADD CONSTRAINT FK_LOANPERIODIC_LOANNUMBER FOREIGN KEY (LoanNumber) REFERENCES LOAN.LOANSETUPINFORMATION; 

ALTER TABLE LOAN.LOANPERIODIC
ADD CONSTRAINT FK_LOANPERIODIC_DelinquencyCode FOREIGN KEY (LoanNumber) REFERENCES[LOAN].[LU_DELINQUENCY];

ALTER TABLE LOAN.LU_DELINQUENCY   ---No FK in LOAN.LOANPERIODIC referincing LU_delinquency because they are not the same data type
ADD CONSTRAINT PK_LU_DELINQUENCY_DelinquencyCode PRIMARY KEY (DelinquencyCode);

